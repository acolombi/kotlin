package test

internal final enum class Test : jet.Enum<test.Test> {
    /*primary*/ private constructor Test(/*0*/ a: jet.Int)
    public final override /*1*/ /*fake_override*/ fun name(): jet.String
    public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
    
    internal class object <class-object-for-Test> {
        /*primary*/ private constructor <class-object-for-Test>()
        public final fun valueOf(/*0*/ value: jet.String): test.Test
        public final fun values(): jet.Array<test.Test>
    }
    
    public enum entry A {
        /*primary*/ private constructor A()
        
        public class object <class-object-for-A> : test.Test {
            /*primary*/ private constructor <class-object-for-A>()
            public final override /*1*/ /*fake_override*/ fun name(): jet.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
        }
    }
    
    public enum entry B {
        /*primary*/ private constructor B()
        
        public class object <class-object-for-B> : test.Test {
            /*primary*/ private constructor <class-object-for-B>()
            public final override /*1*/ /*fake_override*/ fun name(): jet.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
        }
    }
}
